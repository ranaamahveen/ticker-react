{"ast":null,"code":"var _jsxFileName = \"E:\\\\Interviews\\\\Orbis\\\\stocktwits-react-ui\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Async from \"react-async\"; // We'll request user data from this API\n\nconst loadUsers = () => fetch(\"https://api.stocktwits.com/api/2/streams/symbol/:TSLA.json\").then(res => res.ok ? res : Promise.reject(res)).then(res => res.json()); // Our component\n\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Async, {\n    promiseFn: loadUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, ({\n    data,\n    err,\n    isLoading\n  }) => {\n    if (isLoading) return \"Loading...\";\n    if (err) return `Something went wrong: ${err.message}`;\n    if (data) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"React Async - Random Users\")), data.map(user => React.createElement(\"div\", {\n      key: user.username,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, user.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, user.email)))));\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Interviews/Orbis/stocktwits-react-ui/src/App.js"],"names":["React","Component","NavBar","TextField","Async","loadUsers","fetch","then","res","ok","Promise","reject","json","App","data","err","isLoading","message","map","user","username","name","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,MAChBC,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAKA,GAAG,CAACC,EAAJ,GAASD,GAAT,GAAeE,OAAO,CAACC,MAAR,CAAeH,GAAf,CAD/B,EAEGD,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EAFf,CADF,C,CAKA;;;AACA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAER,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,GAAD,KAA8B;AAC7B,QAAIA,SAAJ,EAAe,OAAO,YAAP;AACf,QAAID,GAAJ,EAAS,OAAQ,yBAAwBA,GAAG,CAACE,OAAQ,EAA5C;AAET,QAAIH,IAAJ,EACE,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAIGA,IAAI,CAACI,GAAL,CAASC,IAAI,IACZ;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,QAAf;AAAyB,MAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,KAAT,CAFF,CADF,CADD,CAJH,CADF;AAeH,GArBH,CADF,CADF;AA2BD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Async from \"react-async\";\n\n// We'll request user data from this API\nconst loadUsers = () =>\n  fetch(\"https://api.stocktwits.com/api/2/streams/symbol/:TSLA.json\")\n    .then(res => (res.ok ? res : Promise.reject(res)))\n    .then(res => res.json());\n\n// Our component\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Async promiseFn={loadUsers}>\n        {({ data, err, isLoading }) => {\n          if (isLoading) return \"Loading...\";\n          if (err) return `Something went wrong: ${err.message}`;\n\n          if (data)\n            return (\n              <div>\n                <div>\n                  <h2>React Async - Random Users</h2>\n                </div>\n                {data.map(user => (\n                  <div key={user.username} className=\"row\">\n                    <div className=\"col-md-12\">\n                      <p>{user.name}</p>\n                      <p>{user.email}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            );\n        }}\n      </Async>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}