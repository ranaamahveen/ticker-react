{"ast":null,"code":"import _slicedToArray from \"E:\\\\Interviews\\\\Orbis\\\\stocktwits-react-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Interviews\\\\Orbis\\\\stocktwits-react-ui\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/posts\";\n\nclass DataFetcher extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      error: null,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(this.props.url).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error(\"Error fetching posts!\");\n      }\n    }).then(posts => this.setState({\n      posts,\n      isLoading: false\n    })).catch(error => this.setState({\n      error\n    }));\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n\n}\n\nclass AppRenderProps extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"With Render Props\"), React.createElement(DataFetcher, {\n      url: BASE_URL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ({\n      error,\n      isLoading,\n      posts\n    }) => {\n      if (error) {\n        return React.createElement(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, error.message);\n      }\n\n      if (isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Loading posts...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"App\"), posts.map(post => React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, post.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, post.body))));\n    }));\n  }\n\n}\n\nfunction useDataFetcher(url) {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        posts = _React$useState2[0],\n        setPosts = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isLoading = _React$useState4[0],\n        setIsLoading = _React$useState4[1];\n\n  const _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        error = _React$useState6[0],\n        setError = _React$useState6[1];\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    fetch(url).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error(\"Error fetching posts!\");\n      }\n    }).then(posts => {\n      setPosts(posts);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n    });\n  }, [url]);\n  return {\n    posts,\n    isLoading,\n    error\n  };\n}\n\nfunction AppHooks() {\n  const _useDataFetcher = useDataFetcher(BASE_URL),\n        posts = _useDataFetcher.posts,\n        isLoading = _useDataFetcher.isLoading,\n        error = _useDataFetcher.error;\n\n  if (error) {\n    return React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, error.message);\n  }\n\n  if (isLoading) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Loading posts...\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"App\"), posts.map(post => React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, post.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, post.body))));\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(AppHooks, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["E:/Interviews/Orbis/stocktwits-react-ui/src/index.js"],"names":["React","ReactDOM","BASE_URL","DataFetcher","Component","state","isLoading","error","posts","componentDidMount","setState","fetch","props","url","then","res","ok","json","Error","catch","render","children","AppRenderProps","color","message","map","post","title","body","useDataFetcher","useState","setPosts","setIsLoading","setError","useEffect","AppHooks","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/posts\";\n\nclass DataFetcher extends React.Component {\n  state = {\n    isLoading: false,\n    error: null,\n    posts: []\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    fetch(this.props.url)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching posts!\");\n        }\n      })\n      .then(posts => this.setState({ posts, isLoading: false }))\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nclass AppRenderProps extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>With Render Props</h1>\n        <DataFetcher url={BASE_URL}>\n          {({ error, isLoading, posts }) => {\n            if (error) {\n              return <p style={{ color: \"red\" }}>{error.message}</p>;\n            }\n\n            if (isLoading) {\n              return <p>Loading posts...</p>;\n            }\n\n            return (\n              <div>\n                <h1>App</h1>\n                {posts.map(post => (\n                  <>\n                    <h3>{post.title}</h3>\n                    <p>{post.body}</p>\n                  </>\n                ))}\n              </div>\n            );\n          }}\n        </DataFetcher>\n      </div>\n    );\n  }\n}\n\nfunction useDataFetcher(url) {\n  const [posts, setPosts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    fetch(url)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching posts!\");\n        }\n      })\n      .then(posts => {\n        setPosts(posts);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [url]);\n\n  return { posts, isLoading, error };\n}\n\nfunction AppHooks() {\n  const { posts, isLoading, error } = useDataFetcher(BASE_URL);\n\n  if (error) {\n    return <p style={{ color: \"red\" }}>{error.message}</p>;\n  }\n\n  if (isLoading) {\n    return <p>Loading posts...</p>;\n  }\n\n  return (\n    <div>\n      <h1>App</h1>\n      {posts.map(post => (\n        <>\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n        </>\n      ))}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<AppHooks />, rootElement);\n"]},"metadata":{},"sourceType":"module"}