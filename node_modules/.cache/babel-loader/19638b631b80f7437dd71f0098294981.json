{"ast":null,"code":"var _jsxFileName = \"E:\\\\Interviews\\\\Orbis\\\\stocktwits-react-ui\\\\src\\\\App.js\";\nimport React from \"react\";\nimport image from \"../images/cloud-upload-download-data-transfer.svg\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      contacts: []\n    };\n  }\n\n  componentWillMount() {\n    localStorage.getItem(\"contacts\") && this.setState({\n      contacts: JSON.parse(localStorage.getItem(\"contacts\")),\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    const date = localStorage.getItem(\"contactsDate\");\n    const contactsDate = date && new Date(parseInt(date));\n    const now = new Date();\n    const dataAge = Math.round((now - contactsDate) / (1000 * 60)); // in minutes\n\n    const tooOld = dataAge >= 1;\n\n    if (tooOld) {\n      this.fetchData();\n    } else {\n      console.log(`Using data from localStorage that are ${dataAge} minutes old.`);\n    }\n  }\n\n  fetchData() {\n    this.setState({\n      isLoading: true,\n      contacts: []\n    });\n    fetch(\"https://randomuser.me/api/?results=50&nat=us,dk,fr,gb\").then(response => response.json()).then(parsedJSON => parsedJSON.results.map(user => ({\n      name: `${user.name.first} ${user.name.last}`,\n      username: `${user.login.username}`,\n      email: `${user.email}`,\n      location: `${user.location.street}, ${user.location.city}`\n    }))).then(contacts => this.setState({\n      contacts,\n      isLoading: false\n    })).catch(error => console.log(\"parsing failed\", error));\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"contacts\", JSON.stringify(nextState.contacts));\n    localStorage.setItem(\"contactsDate\", Date.now());\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          contacts = _this$state.contacts;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Fetching Data\", \" \", React.createElement(\"button\", {\n      className: \"btn btn-sm btn-danger\",\n      onClick: e => {\n        this.fetchData();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Fetch now\"))), React.createElement(\"div\", {\n      className: `content ${isLoading ? \"is-loading\" : \"\"}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, !isLoading && contacts.length > 0 ? contacts.map(contact => {\n      const username = contact.username,\n            name = contact.name,\n            email = contact.email,\n            location = contact.location;\n    }) : null), React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Interviews/Orbis/stocktwits-react-ui/src/App.js"],"names":["React","App","Component","constructor","props","state","isLoading","contacts","componentWillMount","localStorage","getItem","setState","JSON","parse","componentDidMount","date","contactsDate","Date","parseInt","now","dataAge","Math","round","tooOld","fetchData","console","log","fetch","then","response","json","parsedJSON","results","map","user","name","first","last","username","login","email","location","street","city","catch","error","componentWillUpdate","nextProps","nextState","setItem","stringify","render","image","e","length","contact"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport image from \"../images/cloud-upload-download-data-transfer.svg\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      contacts: []\n    };\n  }\n\n  componentWillMount() {\n    localStorage.getItem(\"contacts\") &&\n      this.setState({\n        contacts: JSON.parse(localStorage.getItem(\"contacts\")),\n        isLoading: false\n      });\n  }\n\n  componentDidMount() {\n    const date = localStorage.getItem(\"contactsDate\");\n    const contactsDate = date && new Date(parseInt(date));\n    const now = new Date();\n\n    const dataAge = Math.round((now - contactsDate) / (1000 * 60)); // in minutes\n    const tooOld = dataAge >= 1;\n\n    if (tooOld) {\n      this.fetchData();\n    } else {\n      console.log(\n        `Using data from localStorage that are ${dataAge} minutes old.`\n      );\n    }\n  }\n\n  fetchData() {\n    this.setState({\n      isLoading: true,\n      contacts: []\n    });\n\n    fetch(\"https://randomuser.me/api/?results=50&nat=us,dk,fr,gb\")\n      .then(response => response.json())\n      .then(parsedJSON =>\n        parsedJSON.results.map(user => ({\n          name: `${user.name.first} ${user.name.last}`,\n          username: `${user.login.username}`,\n          email: `${user.email}`,\n          location: `${user.location.street}, ${user.location.city}`\n        }))\n      )\n      .then(contacts =>\n        this.setState({\n          contacts,\n          isLoading: false\n        })\n      )\n      .catch(error => console.log(\"parsing failed\", error));\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"contacts\", JSON.stringify(nextState.contacts));\n    localStorage.setItem(\"contactsDate\", Date.now());\n  }\n\n  render() {\n    const { isLoading, contacts } = this.state;\n    return (\n      <div>\n        <header>\n          <img src={image} />\n          <h1>\n            Fetching Data{\" \"}\n            <button\n              className=\"btn btn-sm btn-danger\"\n              onClick={e => {\n                this.fetchData();\n              }}\n            >\n              Fetch now\n            </button>\n          </h1>\n        </header>\n        <div className={`content ${isLoading ? \"is-loading\" : \"\"}`}>\n          <div className=\"panel-group\">\n            {!isLoading && contacts.length > 0\n              ? contacts.map(contact => {\n                  const { username, name, email, location } = contact;\n                })\n              : null}\n          </div>\n          <div className=\"loader\">\n            <div className=\"icon\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}