{"ast":null,"code":"var _jsxFileName = \"E:\\\\Interviews\\\\Orbis\\\\stocktwits-react-ui\\\\src\\\\App.js\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    const date = localStorage.getItem(\"contactsDate\");\n    const contactsDate = date && new Date(parseInt(date));\n    const now = new Date();\n    const dataAge = Math.round((now - contactsDate) / (1000 * 60)); // in minutes\n\n    const tooOld = dataAge >= 1;\n\n    if (tooOld) {\n      this.fetchData();\n    } else {\n      console.log(`Using data from localStorage that are ${dataAge} minutes old.`);\n    }\n  }\n\n  fetchData() {\n    this.setState({\n      isLoading: true,\n      contacts: []\n    });\n    fetch(\"https://api.stocktwits.com/api/2/streams/symbol/AAPL.json\").then(response => response.json()).then(parsedJSON => console.log(parsedJSON.messages.body)).catch(error => console.log(\"parsing failed\", error));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          contacts = _this$state.contacts;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Interviews/Orbis/stocktwits-react-ui/src/App.js"],"names":["React","App","Component","constructor","props","state","isLoading","contacts","componentDidMount","date","localStorage","getItem","contactsDate","Date","parseInt","now","dataAge","Math","round","tooOld","fetchData","console","log","setState","fetch","then","response","json","parsedJSON","messages","body","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;AACA,UAAMC,YAAY,GAAGH,IAAI,IAAI,IAAII,IAAJ,CAASC,QAAQ,CAACL,IAAD,CAAjB,CAA7B;AACA,UAAMM,GAAG,GAAG,IAAIF,IAAJ,EAAZ;AAEA,UAAMG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,GAAG,GAAGH,YAAP,KAAwB,OAAO,EAA/B,CAAX,CAAhB,CALkB,CAK8C;;AAChE,UAAMO,MAAM,GAAGH,OAAO,IAAI,CAA1B;;AAEA,QAAIG,MAAJ,EAAY;AACV,WAAKC,SAAL;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CACG,yCAAwCN,OAAQ,eADnD;AAGD;AACF;;AAEDI,EAAAA,SAAS,GAAG;AACV,SAAKG,QAAL,CAAc;AACZjB,MAAAA,SAAS,EAAE,IADC;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAd;AAKAiB,IAAAA,KAAK,CAAC,2DAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,UAAU,IAAIP,OAAO,CAACC,GAAR,CAAYM,UAAU,CAACC,QAAX,CAAoBC,IAAhC,CAFtB,EAGGC,KAHH,CAGSC,KAAK,IAAIX,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,KAA9B,CAHlB;AAID;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAK5B,KAD9B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAEP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAzC+B;;AA2ClC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    const date = localStorage.getItem(\"contactsDate\");\n    const contactsDate = date && new Date(parseInt(date));\n    const now = new Date();\n\n    const dataAge = Math.round((now - contactsDate) / (1000 * 60)); // in minutes\n    const tooOld = dataAge >= 1;\n\n    if (tooOld) {\n      this.fetchData();\n    } else {\n      console.log(\n        `Using data from localStorage that are ${dataAge} minutes old.`\n      );\n    }\n  }\n\n  fetchData() {\n    this.setState({\n      isLoading: true,\n      contacts: []\n    });\n\n    fetch(\"https://api.stocktwits.com/api/2/streams/symbol/AAPL.json\")\n      .then(response => response.json())\n      .then(parsedJSON => console.log(parsedJSON.messages.body))\n      .catch(error => console.log(\"parsing failed\", error));\n  }\n\n  render() {\n    const { isLoading, contacts } = this.state;\n    return <div></div>;\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}